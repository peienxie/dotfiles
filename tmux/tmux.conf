set -g default-terminal tmux-256color
set -ag terminal-features ",xterm-256color:RGB"
set -ag terminal-overrides ',xterm*:sitm=\E[3m,smxx=\E[9m'

# enable mouse scolling
setw -g mouse on

unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# reload tmux conf
unbind r
bind r source-file $XDG_CONFIG_HOME/tmux/tmux.conf \; display-message "tmux.conf reloaded"

# statusbar color
set-option -g status-style "fg=#ffffff,bg=#333333"
set-option -g status-justify centre
# status left
set-option -g status-left-length 20
set-option -g status-left '#[fg=#ffffff,bg=#4b2a92]#{?client_prefix,#[fg=#333333]#[bg=#b8cc52],} #S '
# status windows
set-option -g window-status-format "#I:#W"
set-option -g window-status-current-style "fg=#ffffff,bg=#f07178"
# status right
set-option -g status-left-length 40
set-option -g status-right '#[fg=#8be9fd,bg=default]cpu #( vmstat 2 2 | tail -1 | awk "{ printf 100-\$15; }" )% ' 
set-option -ga status-right "#[fg=#bd93f9,bg=default]ram #(free -h | grep Mem | awk '{print $7}' ) "
#set-option -ga status-right "#[fg=#f1fa8c,bg=default]#(hostname) " 
set-option -ga status-right "#[fg=#ffffff,bg=#3b2a92] %a %m/%d %H:%M:%S "
# pane border
set-option -g pane-border-style "fg=#333333"
set-option -g pane-active-border-style "fg=#333333"

# windows index starts at 1
set-option -g base-index 1
set-window-option -g pane-base-index 1

# vim style switching pane
bind -r C-h select-pane -L
bind -r C-j select-pane -D
bind -r C-k select-pane -U
bind -r C-l select-pane -R

# resize pane
bind -r M-h resize-pane -L 5
bind -r M-j resize-pane -D 2
bind -r M-k resize-pane -U 2
bind -r M-l resize-pane -R 5

# move window left or right
bind -r "<" swap-window -d -t -1
bind -r ">" swap-window -d -t +1

# sorted sessions alphabetically
bind s choose-tree -s -O name

# the -r option lets you repeat the key without having to repeat leader key.
bind -r n next-window
unbind p
bind -r N previous-window
bind -r l last-window
bind -r L switch-client -l
# switch client to preview/next session 
bind -r ( switch-client -p
bind -r ) switch-client -n

set -g mode-keys vi

# Use v to trigger selection
bind -T copy-mode-vi v send-keys -X begin-selection
# Use y to yank current selection and copy to system clipboard
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"

# set default directory for new windows in this session to current directory:
bind M-c attach-session -c "#{pane_current_path}" \; display-message "working directory has been changed to #{pane_current_path}"
# open a new window in the current directory
bind C new-window -c "#{pane_current_path}"

# when option -S is given and a window named window-name already exists, it will be selected
bind G new-window -S -c "#{pane_current_path}" -n "lazygit" "lazygit"
bind E new-window -S -c "#{pane_current_path}" -n "ranger" "ranger"
bind T new-window -S -c "#{pane_current_path}" -n "todo" "[[ -w _TODOS.md ]] && nvim _TODOS.md || [[ -w ~/vimwiki/inbox/todo.md ]] && nvim ~/vimwiki/inbox/todo.md"
bind W new-window -S -c "#{pane_current_path}" -n "vimwiki" "[[ -d ~/vimwiki ]] && cd ~/vimwiki && nvim ~/vimwiki"

set-option -g status-interval 1
set-option -g automatic-rename on
set-option -g automatic-rename-format "#{?#{==:#{pane_current_command},zsh},#{b:pane_current_path},#{pane_current_command}}"

set-environment -g TMUX_PLUGIN_MANAGER_PATH "$XDG_DATA_HOME/tmux/plugins"

# auto install tpm
if "test ! -d $TMUX_PLUGIN_MANAGER_PATH/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm #{TMUX_PLUGIN_MANAGER_PATH}/tpm && #{TMUX_PLUGIN_MANAGER_PATH}/tpm/bin/install_plugins'"

# list of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'

# tmux-resurrect
set -g @resurrect-dir "$XDG_DATA_HOME/tmux/resurrect"
set -g @resurrect-capture-pane-contents 'on'

# initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# use `#{}` tmux will eval the string value (i.e. the plugin manager path here) before run this command
run "#{TMUX_PLUGIN_MANAGER_PATH}/tpm/tpm"
