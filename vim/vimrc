syntax on

set encoding=utf-8
set fileencodings=utf-8,big5,cp950,gbk,cp936,iso-2022-jp,sjis,euc-jp,japan,euc-kr,ucs-bom,utf-bom,latin1,iso8859-1
set termencoding=utf-8
set fileencoding=utf-8

set noerrorbells
set tabstop=4 softtabstop=4
set shiftwidth=4
set expandtab
set smartindent
set number relativenumber
set nowrap
set smartcase

set noswapfile
set nobackup
set undodir=~/.vim/undodir
set undofile

set incsearch
set signcolumn=yes
set scrolloff=8
" set cursorline
set cmdheight=2


call plug#begin('~/.vim/plugged')
Plug 'gruvbox-community/gruvbox'
Plug 'dracula/vim', {'as': 'dracula'}
Plug 'vim-airline/vim-airline'
Plug 'tpope/vim-fugitive'
Plug 'nvim-treesitter/nvim-treesitter', {'do': ':TSUpdate'}
Plug 'nvim-treesitter/playground'

Plug 'nvim-lua/popup.nvim'
Plug 'nvim-lua/plenary.nvim'
Plug 'nvim-telescope/telescope.nvim'
Plug 'nvim-telescope/telescope-fzf-native.nvim', { 'do': 'make' }
call plug#end()

lua require'nvim-treesitter.configs'.setup { highlight = { enable = true } }

set colorcolumn=80
set termguicolors
set t_Co=256
set background=dark
let g:colors_name = 'dracula'
colorscheme dracula
highlight Normal ctermbg=NONE guibg=NONE
highlight NonText ctermbg=NONE guibg=NONE

let mapleader = " "
let g:airline#extensions#branch#enabled = 1

" escape
inoremap jj <Esc>
inoremap <C-c> <Esc>
nnoremap <C-c> :nohl<CR>

nnoremap <leader><CR> :so $MYVIMRC<CR>

" yank to system clipboard
nnoremap <leader>y "+y
vnoremap <leader>y "+y
" paste from system clipboard
nnoremap <leader>p "+p
nnoremap <leader>P "+P
" replace current selected text
vnoremap <leader>dp "_dP

" delete without copying to clipboard
nnoremap <leader>d "_d
vnoremap <leader>d "_d
nnoremap x "_x
vnoremap x "_xgv

" search for visually hightlighted text
vnoremap <C-f> "hy<Esc>/<C-r>h<CR>
vnoremap <C-r> "hy:%s/<C-r>h//gc<left><left><left>

" move current line/block up and down
inoremap <A-j> <Esc>:m .+1<CR>==gi
inoremap <A-k> <Esc>:m .-2<CR>==gi
nnoremap <A-j> <Esc>:m .+1<CR>
nnoremap <A-k> <Esc>:m .-2<CR>
vnoremap <A-j> :m '>+1<CR>gv=gv
vnoremap <A-k> :m '<-2<CR>gv=gv

" indent but remain in visual mode
vnoremap > >gv
vnoremap < <gv
vnoremap <Tab> >gv
vnoremap <S-Tab> <gv

" move around windows
nnoremap <leader>h <C-w>h
nnoremap <leader>j <C-w>j
nnoremap <leader>k <C-w>k
nnoremap <leader>l <C-w>l
nnoremap <leader>q <C-w>q
nnoremap <leader>ss :split<Return><C-w>w
nnoremap <leader>sv :vsplit<Return><C-w>w

" vim-fugitive
nnoremap <leader>gs :G<CR>
nnoremap <leader>gj :diffget //3<CR>
nnoremap <leader>gf :diffget //2<CR>
nnoremap <leader>gc :Gcommit -v<CR>
nnoremap <leader>gd :Gvdiffsplit<CR>
nnoremap <leader>gl :Gclog<CR>

" telescope
nnoremap <C-p> <Cmd>lua require('telescope.builtin').git_files()<CR>
nnoremap <leader>pf <Cmd>lua require('telescope.builtin').find_files()<CR>
nnoremap <leader>pg <cmd>lua require('telescope.builtin').live_grep()<CR>
nnoremap <leader>pb <cmd>lua require('telescope.builtin').buffers()<CR>
nnoremap <leader>ph <cmd>lua require('telescope.builtin').help_tags()<CR>

augroup highlight_yank
    autocmd!
    au TextYankPost * silent! lua vim.highlight.on_yank { higroup='IncSearch', timeout=250 }
augroup END


